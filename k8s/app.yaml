apiVersion: v1
kind: Service
metadata:
  name: spring-modular-monolith-svc
spec:
  type: NodePort
  selector:
    app: spring-modular-monolith-pod
  ports:
    - name: app-port-mapping
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-modular-monolith-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-modular-monolith-pod
  template:
    metadata:
      labels:
        app: spring-modular-monolith-pod
    spec:
      containers:
        - name: spring-modular-monolith
          image: sivaprasadreddy/spring-modular-monolith
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: k8s
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://spring-modular-monolith-postgres-svc:5432/postgres
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_DATASOURCE_PASSWORD
              value: postgres
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 240
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 240
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 10" ]
